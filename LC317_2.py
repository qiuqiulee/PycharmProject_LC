grid = [[0,2,2,0,2,0,0,0,2,2,0,2,0,2,2,0,2,2,2,0,0,0,0,2,1,0,0,2,2,0,0,0,2,0,0,2,0],\
        [0,2,2,2,0,1,0,0,2,2,0,0,0,2,2,0,0,2,2,0,0,2,0,0,0,0,2,0,0,0,2,2,0,0,0,0,0],\
        [0,0,2,2,2,0,2,2,2,2,0,2,0,0,0,0,2,2,2,0,2,2,2,1,0,2,0,0,2,0,0,0,0,2,0,0,2],\
        [0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,0,2,0,0,2,0,0,0,2,2,2,2],\
        [2,2,2,2,2,0,0,0,2,2,2,2,0,2,2,2,2,0,0,2,1,0,0,2,0,0,2,0,2,2,2,2,1,2,0,0,0],\
        [0,2,1,2,0,0,0,0,0,0,0,0,0,2,2,0,2,2,0,2,0,0,2,2,0,0,2,0,0,0,2,0,2,2,0,0,2],\
        [0,0,0,0,2,0,0,0,2,0,2,0,2,2,2,0,0,0,2,2,0,0,2,0,0,2,0,0,0,0,2,0,0,0,0,2,0],\
        [2,0,2,0,2,0,0,2,2,0,0,0,0,2,0,0,2,2,0,2,2,0,2,2,1,2,2,0,0,0,2,2,1,2,0,0,2],\
        [2,0,2,2,0,0,0,0,0,0,0,2,0,2,2,1,0,2,0,2,0,2,0,0,0,0,0,2,0,0,0,2,2,0,2,0,2],\
        [2,0,0,0,2,2,0,2,0,0,0,2,0,2,0,2,0,2,2,2,0,0,0,1,0,0,0,0,1,0,0,0,0,2,0,0,0],\
        [0,2,0,0,0,2,0,2,0,0,0,1,0,2,0,0,2,0,2,0,0,0,0,2,0,0,0,2,2,2,0,0,2,0,2,0,0],\
        [0,0,0,0,2,2,0,1,2,0,2,2,0,0,0,0,0,0,2,0,2,0,0,2,0,2,0,0,2,0,0,2,0,0,2,0,1],\
        [0,1,2,2,0,2,0,0,2,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,0,0,0],\
        [2,2,2,2,2,2,2,0,2,0,0,2,2,0,2,0,0,0,0,2,0,0,0,2,2,2,0,0,0,2,2,2,0,0,2,0,0]]
# grid = [[1,0,2,0,1],[0,1,0,0,0],[0,0,1,0,0]]
def bfs(x,y):
    tpdis = 0
    queue = [[x,y]]
    dis = [[-1 for _ in range(n)] for _ in range(m)]
    while queue:
        for [x,y] in queue:
            dis[x][y] = tpdis
        tpdis += 1
        nxqueue = []
        for [x,y] in queue:
            for dr in range(4):
                if 0<=x+dirc[dr][0]<m and  0<=y+dirc[dr][1]<n and \
                    grid[x+dirc[dr][0]][y+dirc[dr][1]] != 2 and dis[x+dirc[dr][0]][y+dirc[dr][1]] == -1:
                    nxqueue.append([x+dirc[dr][0],y+dirc[dr][1]])
        queue = nxqueue
    tpres = 0
    for x,y in bl:
        if dis[x][y] == -1:
            return -1
        else:
            tpres+=dis[x][y]
    return tpres

dirc = [[1,0],[0,1],[-1,0],[0,-1]]
m = len(grid)
n = len(grid[0])
bl = []
zl= []
for i in range(m):
    for j in range(n):
        if grid[i][j] == 1:
            bl.append([i,j])
        if grid[i][j] == 2:
            zl.append([i,j])
nob = len(bl)

res = 100000

for i in range(m):
    for j in range(n):
        if [i,j] not in bl and [i,j] not in zl:
            aaa = bfs(i,j)
            print(aaa)
            if aaa != -1:
                res = min(aaa,res)
if res == 100000:
    print(-1)
else:
    print(res)
